<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dnt.itsnow.repository.DictionaryRepository">

    <select id="count" resultType="java.lang.Integer">
        SELECT COUNT(0) FROM dictionaries
        <where>
            <if test="keyword != null and keyword != ''">
                <bind name="pattern" value="'%' + keyword + '%' "/>
                name LIKE #{pattern}
            </if>
        </where>
    </select>

    <sql id="select">
        SELECT * FROM dictionaries
    </sql>

    <resultMap id="dictResult" type="Dictionary" autoMapping="true">
        <id column="id" property="id"></id>
        <result column="detail" property="details" typeHandler="dnt.itsnow.util.DictDetailHandler"/>
    </resultMap>

    <insert id="create" parameterType="Dictionary" keyColumn="id" useGeneratedKeys="true">
        insert into dictionaries (
          code,
          name,
          label,
          description,
          detail,
          created_at,
          updated_at )
        values (
          #{code},
          #{name},
          #{label},
          #{description},
          #{details, jdbcType=LONGVARCHAR, typeHandler=dnt.itsnow.util.DictDetailHandler},
          #{createdAt},
          #{updatedAt}
        )
    </insert>

    <update id="update" parameterType="Dictionary">
        update dictionaries set
        name = #{name},
        label = #{label},
        description = #{description},
        detail = #{details, jdbcType=LONGVARCHAR, typeHandler=dnt.itsnow.util.DictDetailHandler},
        created_at = #{createdAt},
        updated_at = #{updatedAt}
        where id = #{id}
    </update>


    <select id="findAll" resultMap="dictResult">
        <include refid="select"></include>
        <where>
            <if test="keyword != null and keyword != ''">
                <bind name="pattern" value="'%' + keyword + '%' "/>
                name LIKE #{pattern}
            </if>
        </where>
        <if test="pageable.sort != null">
            ORDER BY #{pageable.sort}
        </if>
        <trim prefix="LIMIT" prefixOverrides=",">
            <if test="pageable.offset > 0">#{pageable.offset}</if>
            <if test="pageable.pageSize > 0">, #{pageable.pageSize}</if>
        </trim>
    </select>

    <select id="findByCode" resultMap="dictResult">
        <include refid="select"></include>
        <where>
            code = #{code}
        </where>
    </select>

</mapper>
